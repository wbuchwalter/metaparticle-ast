// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/metaparticle-io/metaparticle-ast/models"
)

// DeleteServiceNoContentCode is the HTTP code returned for type DeleteServiceNoContent
const DeleteServiceNoContentCode int = 204

/*DeleteServiceNoContent Deleted

swagger:response deleteServiceNoContent
*/
type DeleteServiceNoContent struct {
}

// NewDeleteServiceNoContent creates DeleteServiceNoContent with default headers values
func NewDeleteServiceNoContent() *DeleteServiceNoContent {

	return &DeleteServiceNoContent{}
}

// WriteResponse to the client
func (o *DeleteServiceNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

/*DeleteServiceDefault error

swagger:response deleteServiceDefault
*/
type DeleteServiceDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteServiceDefault creates DeleteServiceDefault with default headers values
func NewDeleteServiceDefault(code int) *DeleteServiceDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteServiceDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete service default response
func (o *DeleteServiceDefault) WithStatusCode(code int) *DeleteServiceDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete service default response
func (o *DeleteServiceDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete service default response
func (o *DeleteServiceDefault) WithPayload(payload *models.Error) *DeleteServiceDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete service default response
func (o *DeleteServiceDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteServiceDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
